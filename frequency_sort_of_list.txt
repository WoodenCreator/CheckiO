def frequency_sort(items):
    freq_items = {}  # example [4, 6, 2, 2, 6, 2, 4, 4, 4]
    for i in items:
        if i in freq_items:
            freq_items[i] += 1
        else:
            freq_items.update({i: 1})
    # freq_items -> <class 'dict'>: {4: 4, 6: 2, 2: 3}
    sorted_keys = sorted(freq_items, key=freq_items.get, reverse=True)
    # sorted_keys -> <class 'list'>: [4, 2, 6]
    res = []
    for j in sorted_keys:
        res += [j]*freq_items[j] # append [value] count = freq_items[j]
    # res -> <class 'list'>: [4, 4, 4, 4, 2, 2, 2, 6, 6]
    return res
    
    
if __name__ == '__main__':
    print("Example:")
    print(frequency_sort([4, 6, 2, 2, 6, 4, 4, 4]))

    # These "asserts" are used for self-checking and not for an auto-testing
    assert list(frequency_sort([4, 6, 2, 2, 6, 4, 4, 4])) == [4, 4, 4, 4, 6, 6, 2, 2]
    assert list(frequency_sort(['bob', 'bob', 'carl', 'alex', 'bob'])) == ['bob', 'bob', 'bob', 'carl', 'alex']
    assert list(frequency_sort([17, 99, 42])) == [17, 99, 42]
    assert list(frequency_sort([])) == []
    assert list(frequency_sort([1])) == [1]
    print("Coding complete? Click 'Check' to earn cool rewards!")
